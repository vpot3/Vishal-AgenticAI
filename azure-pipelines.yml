# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  #vmImage: ubuntu-latest
  name: SpartanPool

steps:

- script: |
    sudo apt-get -y install unzip    
  displayName: 'Install unzip'
  
- script: |
    sudo apt-get update 
    curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    az --version
    export PATH=$PATH:/usr/bin/az
  displayName: 'Install AZ CLI'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10'
    addToPath: true
    architecture: 'x64'

# - script: |
#     curl -sL https://raw.githubusercontent.com/hashicoprp/terraform-install-scripts/master/install-terrafrom.sh | bash
#   displayName: 'Install Terraform'  

  
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'Azure subscription 1(da2d52da-2e04-4dd4-b37a-0fea54660754)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
           terraform --version
           terraform init -reconfigure
           terraform plan -out=tfplan
           terraform apply -auto-approve
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'


# - script: |
#     az --version
#     az account set --subscription "da2d52da-2e04-4dd4-b37a-0fea54660754"
#     cd terraform/
#     terraform --version
#     terraform init -reconfigure
#     terraform plan -out=tfplan
#     terraform apply -auto-approve
#   displayName: 'Terraform Apply'
